#!/bin/sh

TEMP_PATH=~/CODE/.tmp/black
REPOSITORY_ROOT=$(git rev-parse --show-toplevel)
STAGED_PY_FILES=($(git diff --cached --name-only --diff-filter=ACM HEAD | grep \\.py\$))
MAC_CODE_ROOT=$(echo $CODE_ROOT | sed "s|/cygdrive/\([a-z]\)|\1:|")
BLACK=$WINDOWS_CODE_ROOT/.devtools/Scripts/black.exe

rm -rf $TEMP_PATH
mkdir -p $TEMP_PATH

FAILED_FILES=()

for FILE_PATH in "${STAGED_PY_FILES[@]}"
do 
    # Get Hash of staged file
    FILE_INFO=$(git ls-files $REPOSITORY_ROOT --stage --full-name | grep -P "[0-9]{6} ([a-z]|[0-9]){40} 0\t$FILE_PATH")
    HASH=$(echo $FILE_INFO | grep -oP "([a-z]|[0-9]){40}")

    # Store Staged file in temp dir
    FILE_NAME_EXT=$(basename $FILE_PATH)
    FILE_NAME="${FILE_NAME_EXT%.*}"
    git cat-file -p $HASH > $TEMP_PATH/$FILE_NAME"-temp.py"

    # Check black on file and store failures
    $BLACK --check -q $TEMP_PATH/$FILE_NAME"-temp.py"
    if [[ $? == 1 ]]; then
        FAILED_FILES+=("$FILE_PATH")
    fi
done

rm -rf $TEMP_PATH

if [[ ${#FAILED_FILES[@]} > 0 ]]; then 
    RED='\033[1;31m'
    NO_COLOUR='\033[0m'
    echo "The following files do not follow black code standards:"
    echo -e "\n"
    for FAILED_FILE in "${FAILED_FILES[@]}"
    do
        echo -e "${RED}      $REPOSITORY_ROOT/$FAILED_FILE ${NO_COLOUR}"
    done
    echo -e "\n"
    echo "In order to commit you need to run black on these files and stage the changes."
    exit 1
fi
